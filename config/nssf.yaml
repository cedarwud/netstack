logger:
  file:
    path: /opt/open5gs/var/log/open5gs/nssf.log
#  level: info   # fatal|error|warn|info(default)|debug|trace

global:
  max:
#   ue: 1024 # The number of UE can be increased depending on memory size.
#    peer: 64

nssf:
  sbi:
    server:
      - dev: eth0
        port: 7777
    client:
#      nrf:
#        - uri: http://127.0.0.10:7777
      scp:
        - uri: http://scp:7777
      nsi:
        - addr: 127.0.0.10
          port: 7777
          s_nssai:
            sst: 1
        - addr: 127.0.0.11
          port: 7777
          s_nssai:
            sst: 2
        - addr: 127.0.0.12
          port: 7777
          s_nssai:
            sst: 3
  ntn_slice_selection:
    enabled: true
    # NTN特定的切片選擇策略
    selection_criteria:
      # 基於UAV類型的切片映射
      uav_types:
        - uav_pattern: "UAV-Alpha-*"    # 指揮無人機
          preferred_sst: 2              # uRLLC優先
          fallback_sst: 1              # eMBB備選
        - uav_pattern: "UAV-Beta-*"     # 偵察無人機  
          preferred_sst: 1              # eMBB優先
          fallback_sst: 3              # mMTC備選
        - uav_pattern: "UAV-Gamma-*"    # IoT無人機
          preferred_sst: 3              # mMTC優先
          fallback_sst: 1              # eMBB備選
      # 基於衛星覆蓋狀況的切片選擇
      satellite_coverage:
        high_elevation:                 # 高仰角(>60度)
          angle_threshold: 60
          preferred_slices: [2, 1]      # uRLLC優先，eMBB備選
          qos_enhancement: true
        medium_elevation:               # 中仰角(30-60度)
          angle_threshold: 30  
          preferred_slices: [1, 2]      # eMBB優先，uRLLC備選
          qos_enhancement: false
        low_elevation:                  # 低仰角(<30度)
          angle_threshold: 30
          preferred_slices: [3, 1]      # mMTC優先，eMBB備選
          qos_enhancement: false
      # 基於任務優先級的切片選擇
      mission_priority:
        critical:                       # 關鍵任務
          priority_level: 1
          mandatory_sst: 2              # 強制uRLLC
          latency_requirement: 10       # 10ms延遲要求
        high:                          # 高優先級任務
          priority_level: 2
          preferred_sst: 2              # uRLLC優先
          latency_requirement: 50       # 50ms延遲要求
        normal:                        # 一般任務
          priority_level: 3
          preferred_sst: 1              # eMBB優先
          latency_requirement: 100      # 100ms延遲要求
        low:                           # 低優先級任務
          priority_level: 4
          preferred_sst: 3              # mMTC優先
          latency_requirement: 1000     # 1s延遲要求
    # 動態切片重選策略
    dynamic_reselection:
      enabled: true
      # 觸發條件
      triggers:
        signal_strength_threshold: -95   # 信號強度閾值(dBm)
        latency_threshold: 200          # 延遲閾值(ms)
        packet_loss_threshold: 0.05     # 封包丟失率閾值
        throughput_threshold: 1         # 吞吐量閾值(Mbps)
      # 重選算法
      reselection_algorithm:
        type: "weighted_score"          # 加權評分算法
        weights:
          signal_quality: 0.3           # 信號質量權重
          latency: 0.3                 # 延遲權重
          availability: 0.2            # 可用性權重
          load: 0.2                    # 負載權重
      # 重選間隔
      reselection_interval: 30         # 30秒重選間隔
      min_stability_time: 120          # 2分鐘最小穩定時間
    # 衛星間切換的切片連續性
    slice_continuity:
      enabled: true
      handover_types:
        inter_satellite:               # 衛星間切換
          maintain_slice: true         # 保持切片類型
          qos_renegotiation: true      # 重新協商QoS
          buffer_time: 5               # 5秒緩衝時間
        intra_satellite:               # 衛星內切換
          maintain_slice: true         # 保持切片類型  
          qos_renegotiation: false     # 不重新協商QoS
          buffer_time: 2               # 2秒緩衝時間
    # 負載均衡
    load_balancing:
      enabled: true
      # 切片負載監控
      monitoring:
        interval: 10                   # 10秒監控間隔
        thresholds:
          high_load: 0.8              # 高負載閾值
          medium_load: 0.6            # 中負載閾值
          low_load: 0.3               # 低負載閾值
      # 負載重分配策略
      redistribution:
        algorithm: "least_loaded"      # 最少負載算法
        migration_threshold: 0.2       # 遷移閾值
        max_migrations_per_period: 10  # 每週期最大遷移數

################################################################################
# SBI Server
################################################################################
#  o Bind to the address on the eth0 and advertise as open5gs-nssf.svc.local
#  sbi:
#    server:
#      - dev:eth0
#        advertise: open5gs-nssf.svc.local
#
#  o Specify a custom port number 7777 while binding to the given address
#  sbi:
#    server:
#      - address: nssf.localdomain
#        port: 7777
#
#  o Bind to 127.0.0.14 and advertise as open5gs-nssf.svc.local
#  sbi:
#    server:
#      - address: 127.0.0.14
#        port: 7777
#        advertise: open5gs-nssf.svc.local
#
#  o Bind to port 7777 but advertise with a different port number 8888
#  sbi:
#    server:
#      - address: 127.0.0.14
#        port: 7777
#        advertise: open5gs-nssf.svc.local:8888
#
################################################################################
# SBI Client
################################################################################
#  o Network Slice Instance(NSI)
#   1. NRF[http://::1:7777/nnrf-nfm/v1/nf-instances]
#      S-NSSAI[SST:1]
#   2. NRF[http://127.0.0.19:7777/nnrf-nfm/v1/nf-instances]
#      NSSAI[SST:1, SD:000080]
#   3. NRF[http://127.0.0.10:7777/nnrf-nfm/v1/nf-instances]
#      NSSAI[SST:1, SD:009000]
#
#  sbi:
#    client:
#      nsi:
#        - uri: http://[::1]:7777
#          s_nssai:
#            sst: 1
#        - uri: http://127.0.0.19:7777
#          s_nssai:
#            sst: 1
#            sd: 000080
#        - uri: http://127.0.0.10:7777
#          s_nssai:
#            sst: 1
#            sd: 009000
#
#  o Direct Communication with NRF
#  sbi:
#    client:
#      nrf:
#        - uri: http://127.0.0.10:7777
#
#  o Indirect Communication by Delegating to SCP
#  sbi:
#    client:
#      scp:
#        - uri: http://127.0.0.200:7777
#
#  o Indirect Communication without Delegation
#  sbi:
#    client:
#      nrf:
#        - uri: http://127.0.0.10:7777
#      scp:
#        - uri: http://127.0.0.200:7777
#      delegated:
#        nrf:
#          nfm: no    # Directly communicate NRF management functions
#          disc: no   # Directly communicate NRF discovery
#        scp:
#          next: no   # Do not delegate to SCP for next-hop
#
#  o Indirect Communication with Delegated Discovery
#  sbi:
#    client:
#      nrf:
#        - uri: http://127.0.0.10:7777
#      scp:
#        - uri: http://127.0.0.200:7777
#      delegated:
#        nrf:
#          nfm: no    # Directly communicate NRF management functions
#          disc: yes  # Delegate discovery to SCP
#        scp:
#          next: yes  # Delegate to SCP for next-hop communications
#
#  o Default delegation: all communications are delegated to the SCP
#  sbi:
#    client:
#      nrf:
#        - uri: http://127.0.0.10:7777
#      scp:
#        - uri: http://127.0.0.200:7777
#      # No 'delegated' section; defaults to AUTO delegation
#
#
################################################################################
# HTTPS scheme with TLS
################################################################################
#  o Set as default if not individually set
#  default:
#    tls:
#      server:
#        scheme: https
#        private_key: @sysconfdir@/open5gs/tls/nssf.key
#        cert: @sysconfdir@/open5gs/tls/nssf.crt
#      client:
#        scheme: https
#        cacert: @sysconfdir@/open5gs/tls/ca.crt
#  sbi:
#    server:
#      - address: nssf.localdomain
#    client:
#      nrf:
#        - uri: https://nrf.localdomain
#      nsi:
#        - uri: https://nrf.localdomain
#          s_nssai:
#            sst: 1
#
#  o Enable SSL key logging for Wireshark
#    - This configuration allows capturing SSL/TLS session keys
#      for debugging or analysis purposes using Wireshark.
#  default:
#    tls:
#      server:
#        scheme: https
#        private_key: @sysconfdir@/open5gs/tls/nssf.key
#        cert: @sysconfdir@/open5gs/tls/nssf.crt
#        sslkeylogfile: @localstatedir@/log/open5gs/tls/nssf-server-sslkeylog.log
#      client:
#        scheme: https
#        cacert: @sysconfdir@/open5gs/tls/ca.crt
#        client_sslkeylogfile: @localstatedir@/log/open5gs/tls/nssf-client-sslkeylog.log
#  sbi:
#    server:
#      - address: nssf.localdomain
#    client:
#      nrf:
#        - uri: https://nrf.localdomain
#      nsi:
#        - uri: https://nrf.localdomain
#          s_nssai:
#            sst: 1
#
#  o Add client TLS verification
#  default:
#    tls:
#      server:
#        scheme: https
#        private_key: @sysconfdir@/open5gs/tls/nssf.key
#        cert: @sysconfdir@/open5gs/tls/nssf.crt
#        verify_client: true
#        verify_client_cacert: @sysconfdir@/open5gs/tls/ca.crt
#      client:
#        scheme: https
#        cacert: @sysconfdir@/open5gs/tls/ca.crt
#        client_private_key: @sysconfdir@/open5gs/tls/nssf.key
#        client_cert: @sysconfdir@/open5gs/tls/nssf.crt
#  sbi:
#    server:
#      - address: nssf.localdomain
#    client:
#      nrf:
#        - uri: https://nrf.localdomain
#      nsi:
#        - uri: https://nrf.localdomain
#          s_nssai:
#            sst: 1